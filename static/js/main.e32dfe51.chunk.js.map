{"version":3,"sources":["redux/actions.js","redux/reducer.js","redux/store.js","component/CreatePost.js","component/Post.js","component/PostList.js","App.js","reportWebVitals.js","index.js"],"names":["ADD_POST","initialState","posts","author","avatar","nickname","date","contents","image","likes","coments","reposts","reducer","state","action","type","payload","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","AUTHORS","CreatePost","useState","setAuthor","setContents","setImage","dispatch","useDispatch","createNewPost","event","preventDefault","post","Date","dd","getDate","mm","getMonth","yy","getFullYear","formatDate","authorSelect","find","item","onSubmit","className","onChange","evt","target","value","map","index","placeholder","e","onClick","Post","src","alt","at","Postlist","useSelector","App","PostList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e32dfe51.chunk.js","sourcesContent":["export const ADD_POST = \"ADD_POST\";\r\n\r\nexport const addPost = (post) => ({\r\n    type: ADD_POST,\r\n    payload: post,\r\n});","import { ADD_POST } from \"./actions\";\r\n\r\nconst POSTS = [\r\n    {\r\n        author: \"Johnny Depp\",\r\n        avatar: \"https://ukranews.com/upload/news/2017/06/20/59494e9705766-------_1200.jpg\",\r\n        nickname: \"Jack Sparrow\",\r\n        date: \"10.12.21\",\r\n        contents: \"It's time to drink a glass of rum\",\r\n        image: \"https://www.kinofilms.ua/images/photos/w680/402456.jpg\",\r\n        likes: 25,\r\n        coments: 5,\r\n        reposts: 3,\r\n    },\r\n    {\r\n        author: \"Kevin McNally\",\r\n        avatar: \"https://images.kinorium.com/movie/cast/340130/w150_431013.jpg?1604701409\",\r\n        nickname: \"Gibbs\",\r\n        date: \"11.12.21\",\r\n        contents: \"Forward to adventure\",\r\n        image: \"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQDuO95kTwC19sxVizMVEYoQ7vxyWX19adnkA&usqp=CAU\",\r\n        likes: 10,\r\n        coments: 2,\r\n        reposts: 1,\r\n    },\r\n    {\r\n        author: \"Orlando Bloom\",\r\n        avatar: \"https://www.kinonews.ru/insimgs/newsimg/newsimg49265.jpg\",\r\n        nickname: \"William Turner\",\r\n        date: \"12.12.21\",\r\n        contents: \"I made a new sword today\",\r\n        image: \"http://res.cloudinary.com/dlteazydn/image/upload/v1541166511/zh_bLQrsfR.jpg\",\r\n        likes: 35,\r\n        coments: 5,\r\n        reposts: 6,\r\n    },\r\n];\r\n\r\nconst initialState = {\r\n    posts: POSTS,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                posts: [...state.posts, action.payload],\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { createStore } from \"redux\";\r\nimport reducer from \"./reducer\";\r\n\r\nexport const store = createStore(\r\n    reducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\n","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addPost } from \"../redux/actions\";\r\n\r\nconst AUTHORS = [\r\n    {\r\n        author: \"Johnny Depp\",\r\n        avatar: \"https://ukranews.com/upload/news/2017/06/20/59494e9705766-------_1200.jpg\",\r\n        nickname: \"Jack Sparrow\",\r\n    },\r\n    {\r\n        author: \"Kevin McNally\",\r\n        avatar: \"https://www.google.com/url?sa=i&url=https%3A%2F%2Fua.kinorium.com%2F457408%2Fcast%2F&psig=AOvVaw3cdLt4KIQAdfzk4-RztLiA&ust=1639383318802000&source=images&cd=vfe&ved=0CAsQjRxqFwoTCODfs4np3fQCFQAAAAAdAAAAABAL\",\r\n        nickname: \"Gibbs\",\r\n    },\r\n    {\r\n        author: \"Orlando Bloom\",\r\n        avatar: \"https://www.kinonews.ru/insimgs/newsimg/newsimg49265.jpg\",\r\n        nickname: \"William Turner\",\r\n    },\r\n]\r\n\r\nconst CreatePost = () => { \r\n    const [author, setAuthor] = useState(\"Johnny Depp\");\r\n    const [contents, setContents] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n\r\n    const formatDate = () => { \r\n        let date = new Date();\r\n\r\n        let dd = date.getDate();\r\n        if (dd < 10) dd = \"0\" + dd;\r\n\r\n        let mm = date.getMonth() + 1;\r\n        if (mm < 10) mm = \"0\" + mm;\r\n\r\n        let yy = date.getFullYear() % 100;\r\n        if (yy < 10) yy = \"0\" + yy;\r\n\r\n        return dd + \".\" + mm + \".\" + yy;\r\n    }\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const createNewPost = (event) => {\r\n        event.preventDefault();\r\n        const date = formatDate();\r\n        const likes = 0;\r\n        const coments = 0;\r\n        const reposts = 0;\r\n        const authorSelect = AUTHORS.find((item) => item.author === author);\r\n        dispatch(addPost({ author: authorSelect.author, avatar: authorSelect.avatar, nickname: authorSelect.nickname, date, contents, image, likes, coments, reposts }));\r\n        setAuthor(\"Johnny Depp\");\r\n        setContents(\"\");\r\n        setImage(\"\");\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={createNewPost} className=\"create-form\">\r\n            <select onChange={evt => setAuthor(evt.target.value)}>\r\n                {AUTHORS.map((item, index) => (\r\n                    <option value={item.author} key={index}>{item.author}</option>\r\n                ))}\r\n\r\n            </select>\r\n\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Contents\"\r\n                value={contents}\r\n                onChange={e => setContents(e.target.value)}\r\n            />\r\n\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Image\"\r\n                value={image}\r\n                onChange={e => setImage(e.target.value)}\r\n            />\r\n\r\n            <button type=\"submit\" onClick={createNewPost}>\r\n                Create new post\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default CreatePost;","import React from 'react';\r\nimport { FaHeart, FaComment, FaRetweet, FaUpload, FaDAndD, FaCheckCircle } from \"react-icons/fa\";\r\n\r\nconst Post = ({ author, avatar, nickname, date, contents, image, likes, coments, reposts }) => {\r\n    return (\r\n        <div className=\"post\">\r\n            <div className=\"content\">\r\n                <img src={avatar} alt=\"\" />\r\n                <div className=\"card\">\r\n                    <span>{author}</span>\r\n                    <FaCheckCircle />\r\n                    <span>{nickname} <FaDAndD /> {date}</span>\r\n                </div>\r\n            </div>\r\n            <span className=\"contents\">{contents}</span>\r\n            <img src={image} at=\"\" />\r\n            <div className=\"icons\">\r\n                <span>\r\n                    <FaHeart /> \r\n                    {likes}\r\n                </span>\r\n\r\n                <span>\r\n                    <FaComment />\r\n                    {coments}\r\n                </span>\r\n\r\n                <span>\r\n                    <FaRetweet />\r\n                    {reposts}\r\n                </span>\r\n\r\n                <span>\r\n                    <FaUpload />\r\n                    {reposts}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import { useSelector } from \"react-redux\";\r\nimport CreatePost from \"./CreatePost\";\r\nimport Post from \"./Post\";\r\n\r\nconst Postlist = () => {\r\n    const posts = useSelector((state) => state.posts);\r\n    return (\r\n        <div>\r\n            <CreatePost />\r\n            <div>\r\n                {posts.map((post, index) => (\r\n                    <Post key={index} {...post} />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Postlist;","import { store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport PostList from \"./component/PostList\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <PostList />\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}